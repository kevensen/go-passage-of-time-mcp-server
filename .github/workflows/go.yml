# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.24"]
        goos: [linux, windows, darwin] # Target operating systems
        goarch: [amd64, arm64] # Target architectures
        exclude: # Exclude combinations that are not supported or desired
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: arm64 # if you don't have an M1/M2 runner

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Test
        run: go test -v ./...

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -o go-potms-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.event.release.tag_name }} ./go-potms/main.go # Adjust path to your main package

      - name: Upload artifact
        env:
          RELEASE_VERSION: ${{ github.event.release.tag_name }}
        uses: actions/upload-artifact@v4
        with:
          name: go-potms-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.event.release.tag_name }}
          path: go-potms-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.event.release.tag_name }}
